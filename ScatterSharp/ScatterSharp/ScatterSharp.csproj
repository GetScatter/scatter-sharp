<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <Authors>Mário Silva</Authors>
    <Company>GetScatter</Company>
    <PackageId>scatter-sharp</PackageId>
    <Product>scatter-sharp</Product>
    <Description>Scatter C# library to interact with ScatterDesktop / ScatterMobile</Description>
    <Copyright>Copyright 2019</Copyright>
    <PackageLicenseUrl>https://github.com/GetScatter/scatter-sharp/blob/master/LICENSE</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/GetScatter/scatter-sharp</PackageProjectUrl>
    <RepositoryUrl>https://github.com/GetScatter/scatter-sharp</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>EOS, NetStandard, secp256k1, Blockchain, Scatter</PackageTags>
    <AssemblyVersion>2.1.3.0</AssemblyVersion>
    <FileVersion>2.1.3.0</FileVersion>
    <PackageReleaseNotes>eos-sharp: Fix Use convert ToDecimal instead of explicit cast
eos-sharp: Fix object to float conversion InvalidCastException (by KGMaxey)
eos-sharp: Add support for variant fields 
eos-sharp: Add support for binary extension types (by dbulha) 
eos-sharp: Add block_num_hint to gettransaction (by dbulha)
eos-sharp: Changed authority accounts to use permission level (by dbulha)</PackageReleaseNotes>
    <Version>2.1.3</Version>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Cryptography.ECDSA.Secp256K1" Version="1.1.2" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.2" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\socketio-sharp\SocketIOSharp\SocketIOSharp\SocketIOSharp.csproj" PrivateAssets="all" />
    <ProjectReference Include="..\ScatterSharp.Core\ScatterSharp.Core.csproj" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup>
    <Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
  </ItemGroup>
  
  <!--
    The following solves the problem that 'dotnet pack' does not include the DLLs from referenced projects.
    See https://github.com/NuGet/Home/issues/3891 for a description of the problem
    and for newer versions / workarounds / built-in methods.
  -->
  <PropertyGroup>
    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
    <!-- include PDBs in the NuGet package -->
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
  </PropertyGroup>
  
  <Target Name="CopyProjectReferencesToPackage" DependsOnTargets="ResolveReferences">
    <ItemGroup>
      <BuildOutputInPackage Include="@(ReferenceCopyLocalPaths-&gt;WithMetadataValue('ReferenceSourceTarget', 'ProjectReference'))" />
    </ItemGroup>
  </Target>

</Project>
